name: Bounty CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Run Trivy Security Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

  build-and-test:
    needs: security-scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install Backend Dependencies
        run: |
          cd backend
          npm install
          
      - name: Run Backend Tests
        run: |
          cd backend
          npm test
          
      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install --legacy-peer-deps

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm install
        
      - name: Create ZIP package
        run: |
          zip -r app.zip . -x "*.git*" "node_modules/*" ".github/*" "backend/*" "frontend/*"
          
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.AWS_EB_APP_NAME }}
          environment_name: ${{ secrets.AWS_EB_ENV_NAME }}
          version_label: ${{ github.sha }}
          region: ${{ secrets.AWS_REGION }}
          deployment_package: app.zip
          wait_for_deployment: true

  monitoring-setup:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Setup Prometheus
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm install prometheus prometheus-community/prometheus
          
      - name: Setup Grafana
        run: |
          helm repo add grafana https://grafana.github.io/helm-charts
          helm install grafana grafana/grafana
          
      - name: Setup ELK Stack
        run: |
          helm repo add elastic https://helm.elastic.co
          helm install elasticsearch elastic/elasticsearch
          helm install kibana elastic/kibana
          helm install logstash elastic/logstash